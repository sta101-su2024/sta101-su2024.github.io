---
title: "Explore categorical data"
editor: visual
---

# Exploring categorical data

## 2020 Durham City and County Resident Survey

![](images/durham-survey.png){fig-align="center" width="400"}

## Sample survey questions - services

![](images/services.png){fig-align="center" width="800"}

## Sample survey questions - safety

![](images/safety.png){fig-align="center" width="800"}

## Sample survey questions - demographics (Today's focus)

![](images/demographics.png){fig-align="center" width="800"}

The main question we'll explore today is "What are the demographics and priorities of City of Durham residents?"

# Goals

-   Getting familiar with survey data

-   Visualizing and summarizing categorical data

-   Make connections between concepts of variable types in a study and variable types in R

-   Exploring relationships between categorical variables

-   Improving visualizations for visual appeal and better communication

# Packages

```{r}
#| label: load-packages
#| message: false

library(tidyverse)
```

# Data

The data for this case study come from the 2020 Durham City and County Resident Survey.

First, let's load the data:

```{r}
#| label: load-data

durham <- read_csv("durham-2020.csv")
```

# Visualizing and summarizing categorical data

## Exercise 1

How many rows and columns are in this dataset? Answer in a full sentence using **inline code**. What does each row represent and what does each column represent?

*Add your answer here.*

## Exercise 2

The variables we'll use in this analysis are as follows. Rename the variables to the updated names shown below.

| Original name                             | Updated name       |
|-------------------------------------------|--------------------|
| `primary_language`                        | `primary_language` |
| `do_you_own_or_rent_your_current_resi_31` | `own_rent`         |
| `would_you_say_your_total_annual_hous_35` | `income`           |

```{r}
#| label: rename

# add code here
```

## Exercise 3

What language do Durham residents speak: `primary_language`?

> What is the primary language used in your household?

*Add your answer here.*

```{r}
#| label: primary-language

# add code here
```

## Exercise 4

Make similar bar plots of `own_rent` and `income`. What distinct values do these variables take?

```{r}
#| label: own-rent-income

# add code here
```

## Exercise 5

The variables `own_rent` and `income` are both categorical, but they're stored as numbers. In R, categorical data are called **factor**s. *Recode* these variables as factors with the `as_factor()` function.

```{r}
#| label: recode-types
#| fig-width: 10
#| fig-asp: 0.4

# add code here
```

## Exercise 6

Recreate the visualization from the `previous exercise`income\` barplot, improving it for both visual appeal and better communication of findings.

*Add your answer here.*

```{r}
#| label: income-improve
#| fig-width: 10
#| fig-asp: 0.4

# add code here
```

## Exercise 7

Recreate the visualization from the previous exercise, but first calculate relative frequencies (proportions) of income (the **marginal distribution**) and plot the proportions instead of counts.

```{r}
#| label: income-proportions

# add code here
```

# Visualizing relationships

## Exercise 8

Visualize and describe the relationship between income and home ownership of Durham residents.

*Stretch goal:* Customize the colors using named colors from <http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf>.

*Add your answer here.*

```{r}
#| label: income-own-rent-plot
#| fig-width: 10
#| fig-asp: 0.4

# add code here
```

## Exercise 9

Calculate the proportions of home owners for each category of Durham residents. Describe the relationship between these two variables, this time with the actual values from the **conditional distribution** of home ownership based on income level.

*Add your answer here.*

```{r}
#| label: income-own-rent-props

# add code here
```

## Exercise 10

*Stretch goal:* Recode the **level**s of these two variables to be more informatively labeled and calculate the proportions from the previous exercise again.

```{r}
#| label: recode-levels

# add code here
```

# Recap

## Conceptual

Some of the terms we introduced are:

-   **Marginal distribution**: Distribution of a single variable.

-   **Conditional distribution**: Distribution of a variable conditioned on the values (or levels, in the context of categorical data) of another.

## R

In this application exercise we:

-   Defined **factor**s -- the data type that R uses for categorical variables, i.e., variables that can take on values from a finite set of **level**s.

<!-- -->

-   Reviewed data imports, visualization, and wrangling functions encountered before:
    -   Import: `read_csv()`: Read data from a CSV (comma separated values) file
    -   Visualization:
        -   `ggplot()`: Create a plot using the ggplot2 package
        -   `aes()`: Map variables from the data to **aes**thetic elements of the plot, generally passed as an argument to `ggplot()` or to `geom_*()` functions (define only `x` **or** `y` aesthetic)
        -   `geom_bar()`: Represent data with bars, after calculating heights of bars under the hood
        -   `labs()`: Label `x` axis, `y` axis, legend for `color` of plot, title\` of plot, etc.
    -   Wrangling:
        -   `mutate()`: Mutate the data frame by creating a new column or overwriting one of the existing columns
        -   `count()`: Count the number of observations for each level of a categorical variable (factor) or each distinct value of any other type of variable
        -   `group_by()`: Perform each subsequent action once per each group of the variable, where groups can be defined based on the levels of one or more variables
-   Introduced new data wrangling functions:
    -   `rename()`: Rename columns in a data frame
    -   `as_factor()`: Convert a variable to a factor
    -   `drop_na()`: Drop rows that have `NA` in one ore more specified variables
    -   `if_else()`: Write logic for what happens if a condition is true and what happens if it's not
    -   `case_when()`: Write a generalized `if_else()` logic for more than one codition
-   Introduced new data visualization functions:
    -   `geom_col()`: Represent data with bars (**col**umns), for heights that have already been calculated (must define `x` **and** `y` aesthetics)
    -   `scale_fill_viridis_d()`: Customize the **d**iscrete `fill` scale, using a color-blind friendly, ordinal **d**iscrete color scale
    -   `scale_y_discrete()`: Customize the discrete `y` scale
    -   `scale_fill_manual()`: Customize the `fill` scale by manually adjusting values for colors

## Quarto

We also introduced chunk options for managing figure sizes:

-   `fig-width`: Width of figure
-   `fig-asp`: Aspect ratio of figure (height / width)
-   `fig-height`: Height of figure -- but I recommend using `fig-width` and `fig-asp`, instead of `fig-width` and `fig-height`

# Acknowledgements

This dataset was cleaned and prepared for analysis by Duke StatSci PhD student [Sam Rosen](https://samgrosen.github.io/).
